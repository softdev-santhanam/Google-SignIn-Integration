{"ast":null,"code":"var _jsxFileName = \"D:\\\\02. Lystloc\\\\Assessment\\\\Google-Integration\\\\client\\\\src\\\\components\\\\Home.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center p-5 text-info\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = Home;\nexport default Home;\n\n// const express = require(\"express\");\n// const bodyParser = require(\"body-parser\");\n// const cors = require(\"cors\");\n// const Sequelize = require(\"sequelize\");\n// const { OAuth2Client } = require(\"google-auth-library\");\n// const CLIENT_ID =\n//   \"1096363636723-jkjkqb0kudhr2ovvghmto1qk8e2ekeaa.apps.googleusercontent.com\";\n// const client = new OAuth2Client(CLIENT_ID);\n\n// const app = express();\n\n// app.use(bodyParser.json());\n// app.use(cors());\n\n// // Initialize Sequelize\n// const sequelize = new Sequelize(\"crud\", \"santhanakrishnan\", \"Askrrdc@#$sql1\", {\n//   host: \"localhost\",\n//   dialect: \"mysql\",\n// });\n\n// // Test database connection\n// sequelize\n//   .authenticate()\n//   .then(() => console.log(\"Connected to MySQL database\"))\n//   .catch((err) => console.error(\"Unable to connect to the database:\", err));\n\n// // Define the User model\n// const User = sequelize.define(\"demo\", {\n//   username: {\n//     type: Sequelize.STRING,\n//     unique: true,\n//     allowNull: true,\n//   },\n//   password: {\n//     type: Sequelize.STRING,\n//     allowNull: true,\n//   },\n//   access_token: {\n//     type: Sequelize.STRING,\n//     allowNull: false,\n//   },\n// });\n\n// // Sync the User model with the database\n// User.sync()\n//   .then(() => console.log(\"User table created\"))\n//   .catch((err) => console.error(\"Error creating user table:\", err));\n\n// // Get all the data\n// app.get(\"/\", (req, res) => {\n//   User.findAll()\n//     .then((users) => res.status(200).json(users))\n//     .catch((err) => res.status(500).json({ error: \"Internal server error\" }));\n// });\n\n// // Define the API routes\n// app.post(\"/\", (req, res) => {\n//   const { username, password } = req.body;\n\n//   // Check if the user exists in the database\n//   User.findOne({ where: { username } })\n//     .then((user) => {\n//       if (!user) {\n//         return res.status(401).json({ error: \"Invalid username\" });\n//       }\n\n//       // Check if the password is correct\n//       if (password !== user.password) {\n//         return res.status(401).json({ error: \"Invalid password\" });\n//       }\n\n//       // Login successful\n//       return res.status(200).json({ message: \"Login successful\" });\n//     })\n//     .catch((err) => res.status(500).json({ error: \"Internal server error\" }));\n// });\n\n// app.post(\"/google-login\", async (req, res) => {\n//   const { sendToken } = req.body;\n//   console.log(sendToken);\n//   if (!sendToken) {\n//     return res.status(400).json({ error: \"Access token is missing\" });\n//   }\n//   try {\n//     const ticket = await client.verifyIdToken({\n//       idToken: sendToken,\n//       audience: CLIENT_ID,\n//     });\n//     const payload = ticket.getPayload();\n//     const { email } = payload;\n\n//     // check if the user already exists in your database\n//     const user = await User.findOne({ where: { username: email } });\n//     if (user) {\n//       console.log(\"User found in database\");\n//       return res.status(200).json({ message: \"Successful login with Google\" });\n//     } else {\n//       // create a new user with the Google credentials\n//       const newUser = await User.create({\n//         username: email,\n//         access_token: sendToken,\n//       });\n//       console.log(\"New user created in database\");\n//       return res.status(200).json({ message: \"Successful login with Google\" });\n//     }\n//   } catch (error) {\n//     console.error(error);\n//     if (error.message === \"Invalid Value\") {\n//       return res.status(400).json({ error: \"Invalid access token\" });\n//     }\n//     if (error.message === \"user not found\") {\n//       return res.status(404).json({ error: \"User not found\" });\n//     }\n//     res.status(500).json({ error: \"Internal server error\" });\n//   }\n// });\n\n// // Start the server\n// const PORT = 7000;\n// app.listen(PORT, () => console.log(`Server started on port ${PORT}`));\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","Home"],"sources":["D:/02. Lystloc/Assessment/Google-Integration/client/src/components/Home.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"text-center p-5 text-info\">\r\n      <h1>Welcome to Home Page</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n// const express = require(\"express\");\r\n// const bodyParser = require(\"body-parser\");\r\n// const cors = require(\"cors\");\r\n// const Sequelize = require(\"sequelize\");\r\n// const { OAuth2Client } = require(\"google-auth-library\");\r\n// const CLIENT_ID =\r\n//   \"1096363636723-jkjkqb0kudhr2ovvghmto1qk8e2ekeaa.apps.googleusercontent.com\";\r\n// const client = new OAuth2Client(CLIENT_ID);\r\n\r\n// const app = express();\r\n\r\n// app.use(bodyParser.json());\r\n// app.use(cors());\r\n\r\n// // Initialize Sequelize\r\n// const sequelize = new Sequelize(\"crud\", \"santhanakrishnan\", \"Askrrdc@#$sql1\", {\r\n//   host: \"localhost\",\r\n//   dialect: \"mysql\",\r\n// });\r\n\r\n// // Test database connection\r\n// sequelize\r\n//   .authenticate()\r\n//   .then(() => console.log(\"Connected to MySQL database\"))\r\n//   .catch((err) => console.error(\"Unable to connect to the database:\", err));\r\n\r\n// // Define the User model\r\n// const User = sequelize.define(\"demo\", {\r\n//   username: {\r\n//     type: Sequelize.STRING,\r\n//     unique: true,\r\n//     allowNull: true,\r\n//   },\r\n//   password: {\r\n//     type: Sequelize.STRING,\r\n//     allowNull: true,\r\n//   },\r\n//   access_token: {\r\n//     type: Sequelize.STRING,\r\n//     allowNull: false,\r\n//   },\r\n// });\r\n\r\n// // Sync the User model with the database\r\n// User.sync()\r\n//   .then(() => console.log(\"User table created\"))\r\n//   .catch((err) => console.error(\"Error creating user table:\", err));\r\n\r\n// // Get all the data\r\n// app.get(\"/\", (req, res) => {\r\n//   User.findAll()\r\n//     .then((users) => res.status(200).json(users))\r\n//     .catch((err) => res.status(500).json({ error: \"Internal server error\" }));\r\n// });\r\n\r\n// // Define the API routes\r\n// app.post(\"/\", (req, res) => {\r\n//   const { username, password } = req.body;\r\n\r\n//   // Check if the user exists in the database\r\n//   User.findOne({ where: { username } })\r\n//     .then((user) => {\r\n//       if (!user) {\r\n//         return res.status(401).json({ error: \"Invalid username\" });\r\n//       }\r\n\r\n//       // Check if the password is correct\r\n//       if (password !== user.password) {\r\n//         return res.status(401).json({ error: \"Invalid password\" });\r\n//       }\r\n\r\n//       // Login successful\r\n//       return res.status(200).json({ message: \"Login successful\" });\r\n//     })\r\n//     .catch((err) => res.status(500).json({ error: \"Internal server error\" }));\r\n// });\r\n\r\n// app.post(\"/google-login\", async (req, res) => {\r\n//   const { sendToken } = req.body;\r\n//   console.log(sendToken);\r\n//   if (!sendToken) {\r\n//     return res.status(400).json({ error: \"Access token is missing\" });\r\n//   }\r\n//   try {\r\n//     const ticket = await client.verifyIdToken({\r\n//       idToken: sendToken,\r\n//       audience: CLIENT_ID,\r\n//     });\r\n//     const payload = ticket.getPayload();\r\n//     const { email } = payload;\r\n\r\n//     // check if the user already exists in your database\r\n//     const user = await User.findOne({ where: { username: email } });\r\n//     if (user) {\r\n//       console.log(\"User found in database\");\r\n//       return res.status(200).json({ message: \"Successful login with Google\" });\r\n//     } else {\r\n//       // create a new user with the Google credentials\r\n//       const newUser = await User.create({\r\n//         username: email,\r\n//         access_token: sendToken,\r\n//       });\r\n//       console.log(\"New user created in database\");\r\n//       return res.status(200).json({ message: \"Successful login with Google\" });\r\n//     }\r\n//   } catch (error) {\r\n//     console.error(error);\r\n//     if (error.message === \"Invalid Value\") {\r\n//       return res.status(400).json({ error: \"Invalid access token\" });\r\n//     }\r\n//     if (error.message === \"user not found\") {\r\n//       return res.status(404).json({ error: \"User not found\" });\r\n//     }\r\n//     res.status(500).json({ error: \"Internal server error\" });\r\n//   }\r\n// });\r\n\r\n// // Start the server\r\n// const PORT = 7000;\r\n// app.listen(PORT, () => console.log(`Server started on port ${PORT}`));\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,IAAI,GAAG,MAAM;EACjB,oBACE;IAAK,SAAS,EAAC,2BAA2B;IAAA,uBACxC;MAAA,UAAI;IAAoB;MAAA;MAAA;MAAA;IAAA;EAAK;IAAA;IAAA;IAAA;EAAA,QACzB;AAEV,CAAC;AAAC,KANIA,IAAI;AAQV,eAAeA,IAAI;;AAEn},"metadata":{},"sourceType":"module","externalDependencies":[]}